type Response {
    success: Boolean!
    message: String
}

type UserResponse {
    user: User
    response: Response
}

type UserLoginResponse {
    jwt_token: String!
    response: Response
}

type DeckResponse {
    deck: Deck
    response: Response
}

type DeckListResponse {
    decks: [Deck]
    response: Response
}


type SubDeckResponse {
    subdeck: SubDeck
    response: Response
}

type SubDeckListResponse {
    subdecks: [SubDeck]
    response: Response
}

type CardResponse {
    card: Card
    response: Response
}

type CardListResponse {
    cards: [Card]
    response: Response
}

type Card {
    id: Int
    question: String!
    answer: String!
    creation_date: String
    subdeck_id: Int
}

type User {
    id: Int
    email: String!
    username: String!
    password: String!
    creation_date: String
}

type SubDeck {
    id: Int
    name: String!
    description: String!
    cards: [Card]
    creation_date: String
}

type UserDeck {
    id: Int
    user_id: Int
    deck_id: Int
    creation_date: String
}


type Deck {
    id: Int
    name: String!
    description: String
    subdecks: [SubDeck]
    creation_date: String
}

# Query
type Query {
    get_deck (deck_id: Int!): DeckResponse
    get_subdeck(subdeck_id: Int!): SubDeckResponse
    get_card (card_id: Int!): CardResponse
    get_user(user_id: Int!): UserResponse

    validate_username(username: String!): Response!
    login(email: String!, password: String!): UserLoginResponse!
    validate_user_auth(jwt_token: String!): Response!

    get_user_flashcards: DeckListResponse!
}

# Mutation
type Mutation {
    add_card(subdeck_id: Int!, question: String!, answer: String!): CardResponse!
    edit_card(card_id: Int!, question: String!, answer: String!): Response!
    delete_card(card_id: Int!): Response!

    add_deck(name: String!, description: String!) : DeckResponse!
    edit_deck(deck_id: Int!, name: String!, description: String!): Response!
    delete_deck(deck_id: Int!): Response!

    add_user(email: String!, username: String!, password: String!): Response!
    edit_user(email: String!, username: String!, password: String!): Response!
    delete_user: Response!

    add_subdeck(deck_id: Int!, name: String!, description: String!): SubDeckResponse!
    edit_subdeck(subdeck_id: Int!, name: String!, description: String!): Response!
    delete_subdeck(subdeck_id: Int!): Response!
}